        #         parent[rootY] = rootX
        #         size[rootX] += size[rootY]

        # for n in nums:
        #     if n not in parent:
        #         parent[n] = n
        #         size[n] = 1

        # for n in nums:
        #     if n+1 in parent:
        #         union(n, n+1)

        # return max(size.values())                           
        mp = defaultdict(int)
        res = 0

        for num in nums:
            if not mp[num]:
                mp[num] = mp[num - 1] + mp[num + 1] + 1
                mp[num - mp[num - 1]] = mp[num]
                mp[num + mp[num + 1]] = mp[num]
                res = max(res, mp[num])
        return res
                

