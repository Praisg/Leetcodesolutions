class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        """iterate thru using a sliding window, i = 0 , r keeps going using a for loop,
        take note of the longest = 0 , get max of long and window lenght = r-l + 1 accounting for 
first letter. to avoid dublicates use a set
        """
        n = len(s)
        i = 0
        longest = 0

        for r in range(n):
        sett = set()
            while s[r] in sett:

        if s[r] is in the set we want to remove s[i] from the set and start at i+ 1
                sett.remove(s[i])
                i += 1
            sett.add(s[r])    
            w = (r-i)+ 1
            longest = max(longest, w)
        return longest    


        add to set if not in set
