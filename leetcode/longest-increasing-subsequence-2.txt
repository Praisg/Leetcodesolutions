class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        """
        first approach is use a dp: where  i is outer loop and j is the nested one
         nums-> [10, 9, 2, 5, 3, 7, 101, 18]
        dp ->    [1,  1, 1, 2, 2, 1,   1,  1] 
        """     
        n = len(nums)
        dp =[1]*n
                                  i
                         j
               so we want to build the number of the sub at that position at it intially start as 1

        for i in range(1,n):
            for j in range(i):
                if nums[i] > nums[j]:
                    dp[i] = max(dp[i], dp[j]+1)

        return max(dp)            
        